version: "3.4"

x-api-env: &api-env
  GCP_PROJECT_ID: vet-shelter # must match value passed to emulators

x-chat-env: &chat-env
  GCP_PROJECT_ID: vet-shelter
  FIRESTORE_EMULATOR_HOST: firestore:8970
  PLUGINS: CHAT_API
  CHAT_BROKER_ENABLED: "true"
  CHAT_STORAGE: firestore
  CHAT_REDIS_HOST: redis
  CHAT_REDIS_PORT: 6379

services:
  chat_1:
    image: chat-like-microservice
    build:
      context: .
    environment:
      <<: *chat-env
      CHAT_REDIS_CLIENT_ID: 749fbca5-a917-4811-a9dc-e542f10faaa3
    volumes:
      - ./src:/app/src
      - ./test:/app/test
      - ./env:/app/env
    ports:
      - 3000:3000
    depends_on:
      - firestore
      - redis
    command: yarn start:dev

  chat_2:
    image: chat-like-microservice
    build:
      context: .
    environment:
      <<: *chat-env
      CHAT_REDIS_CLIENT_ID: 6ef9cd02-2ac1-4272-bc5a-d8fbee609c93
    volumes:
      - ./src:/app/src
      - ./test:/app/test
      - ./env:/app/env
    ports:
      - 3001:3000
    depends_on:
      - firestore
      - redis
    command: yarn start:dev

  like:
    image: chat-like-microservice
    build:
      context: .
    environment:
      <<: *api-env
      BIGTABLE_EMULATOR_HOST: bigtable:8086
      PLUGINS: LIKE_API
      LIKE_STORAGE: memory
    volumes:
      - ./src:/app/src
      - ./test:/app/test
      - ./env:/app/env
    ports:
      - 3002:3000
    depends_on:
      - bigtable
    command: yarn start:dev

  firestore:
    extends:
      file: docker-compose.services.yml
      service: firestore

  bigtable:
    extends:
      file: docker-compose.services.yml
      service: bigtable

  redis:
    extends:
      file: docker-compose.services.yml
      service: redis
